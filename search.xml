<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>统一返回结果及异常处理</title>
    <url>/2019/12/29/%E7%BB%9F%E4%B8%80%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%E5%8F%8A%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>制定统一的返回结果标准<br>制定系统内置异常代码描述，统一格式，方便维护及使用<br>制定统一的返回结果处理方法，对请求成功或有异常等结果进行封装<br>自定义异常处理方法，依照无参、指定异常代码（使用内置异常代码）、指定异常信息（默认代码500，抛出具体异常信息）、通用方法<br>通过@ControllerAdvice进行全局异常处理，识别不同异常类型进行分别处理</p>
<h2 id="统一返回结果"><a href="#统一返回结果" class="headerlink" title="统一返回结果"></a>统一返回结果</h2><p>声明一个统一的返回结果对象<br>BaseResult.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import com.fasterxml.jackson.databind.annotation.JsonSerialize;</span><br><span class="line">import lombok.Data;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line">&#x2F;&#x2F;不显示null字段</span><br><span class="line">@JsonSerialize(include &#x3D; JsonSerialize.Inclusion.NON_NULL)</span><br><span class="line">public class BaseResult&lt;T&gt; &#123;</span><br><span class="line">    &#x2F;&#x2F; 返回代码</span><br><span class="line">    private String code;</span><br><span class="line">    &#x2F;&#x2F; 返回状态</span><br><span class="line">    private Integer status;</span><br><span class="line">    &#x2F;&#x2F; 返回信息</span><br><span class="line">    private String msg;</span><br><span class="line">    &#x2F;&#x2F; 返回数据</span><br><span class="line">    private T data;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>定义代码枚举类,包含请求成功及异常代码<br>CodeEnum.java   </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public enum CodeEnum &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;* 请求成功 *&#x2F;</span><br><span class="line">    SUCCESS(&quot;0&quot;, &quot;请求成功&quot;),</span><br><span class="line"></span><br><span class="line">    &#x2F;* 未指明异常 *&#x2F;</span><br><span class="line">    UNSPECIFIED(&quot;500&quot;, &quot;网络异常，请稍后再试&quot;),</span><br><span class="line">    NO_SERVICE(&quot;404&quot;, &quot;网络异常, 服务器熔断&quot;),</span><br><span class="line"></span><br><span class="line">    &#x2F;*  通用异常 *&#x2F;</span><br><span class="line">    REQUEST_ERROR(&quot;400&quot;, &quot;入参异常,请检查入参后再次调用&quot;),</span><br><span class="line">    PAGE_NUM_IS_NULL(&quot;4001&quot;,&quot;页码不能为空&quot;),</span><br><span class="line">    PAGE_SIZE_IS_NULL(&quot;4002&quot;,&quot;页数不能为空&quot;),</span><br><span class="line">    ID_IS_NULL(&quot;4003&quot;,&quot;ID不能为空&quot;),</span><br><span class="line">    SEARCH_IS_NULL(&quot;4004&quot;,&quot;搜索条件不能为空&quot;)</span><br><span class="line"></span><br><span class="line">    ;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 错误码</span><br><span class="line">    private  String code;</span><br><span class="line">    &#x2F;&#x2F; 错误描述</span><br><span class="line">    private  String msg;</span><br><span class="line"></span><br><span class="line">    CodeEnum (String code, String msg) &#123;</span><br><span class="line">        this.code &#x3D; code;</span><br><span class="line">        this.msg &#x3D; msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getCode() &#123;</span><br><span class="line">        return code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCode(String code) &#123;</span><br><span class="line">        this.code &#x3D; code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getMsg() &#123;</span><br><span class="line">        return msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setMsg(String msg) &#123;</span><br><span class="line">        this.msg &#x3D; msg;</span><br><span class="line">    &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>创建统一返回结果的处理方法，包含</p>
<ul>
<li>请求成功，有返回结果</li>
<li>请求失败，有异常</li>
</ul>
<p>ResultUitl.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class ResultUtil &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">    * @Description: 请求成功，且有返回数据</span><br><span class="line">    *&#x2F;</span><br><span class="line">    public static &lt;T&gt; BaseResult&lt;T&gt; success(T data) &#123;</span><br><span class="line">        return commonResult(CodeEnum.SUCCESS.getCode(), 1, CodeEnum.SUCCESS.getMsg(), data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">    * @Description: 请求失败，有异常</span><br><span class="line">    *&#x2F;</span><br><span class="line">    public static &lt;T&gt; BaseResult&lt;T&gt; error(String code, String msg) &#123;</span><br><span class="line">        return commonResult(code, 0, msg, null);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">    * @Description: 构造统一返回结果</span><br><span class="line">    *&#x2F;</span><br><span class="line">    private static &lt;T&gt; BaseResult&lt;T&gt; commonResult(String code, Integer status, String msg, T data) &#123;</span><br><span class="line">        BaseResult&lt;T&gt; result &#x3D; new BaseResult&lt;&gt;();</span><br><span class="line">        result.setCode(code);</span><br><span class="line">        result.setStatus(status);</span><br><span class="line">        result.setMsg(msg);</span><br><span class="line">        result.setData(data);</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>常见异常</p>
<ul>
<li><a href="http://note.youdao.com/noteshare?id=4c0ba0a31e2290c65e89a598383cea51&sub=2815B30B528947A999141ACB8D0ACF02" target="_blank" rel="noopener">HTTP请求异常</a></li>
</ul>
<p>创建基础异常处理类<br>BaseException.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import com.hx.tyc.config.result.CodeEnum;</span><br><span class="line">import lombok.Data;</span><br><span class="line">@Data</span><br><span class="line">public class BaseException extends RuntimeException &#123;</span><br><span class="line"></span><br><span class="line">    private CodeEnum errorcCodes;</span><br><span class="line">    &#x2F;** </span><br><span class="line">    * @Description: 构造无参异常处理类</span><br><span class="line">    *&#x2F; </span><br><span class="line">    public BaseException() &#123;</span><br><span class="line">        super(CodeEnum.UNSPECIFIED.getMsg());</span><br><span class="line">        this.errorcCodes &#x3D; CodeEnum.UNSPECIFIED;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;** </span><br><span class="line">    * @Description: 构造指定异常代码处理方法</span><br><span class="line">    *&#x2F; </span><br><span class="line">    public BaseException(CodeEnum code) &#123;</span><br><span class="line">        super(code.getMsg());</span><br><span class="line">        this.errorcCodes &#x3D; code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;** </span><br><span class="line">    * @Description: 构造指定异常信息处理方法 </span><br><span class="line">    *&#x2F; </span><br><span class="line">    public BaseException(String errorMsg) &#123;</span><br><span class="line">        super(errorMsg);</span><br><span class="line">        this.errorcCodes &#x3D; CodeEnum.UNSPECIFIED;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;** </span><br><span class="line">    * @Description: 构造通用异常处理方法 </span><br><span class="line">    *&#x2F; </span><br><span class="line">    public BaseException(CodeEnum errorCode, String errorMsg) &#123;</span><br><span class="line">        super(errorMsg);</span><br><span class="line">        this.errorcCodes &#x3D; errorCode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>创建全局异常处理类，识别返回异常类型，按照统一返回结果格式进行数据展示<br>GlobalExceptionHandle.java</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import com.hx.tyc.config.result.BaseResult;</span><br><span class="line">import com.hx.tyc.config.result.ResultUtil;</span><br><span class="line">import org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line">import org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line">import org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line">@ControllerAdvice</span><br><span class="line">public class GlobalExceptionHandle &#123;</span><br><span class="line"></span><br><span class="line">    @ExceptionHandler(value &#x3D; Exception.class)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public &lt;T&gt; BaseResult&lt;T&gt; ExceptionHandle(Exception ex) &#123;</span><br><span class="line">        String code &#x3D; null;</span><br><span class="line">        String msg &#x3D; null;</span><br><span class="line">        if (ex instanceof BaseException) &#123;</span><br><span class="line">            BaseException baseException &#x3D; (BaseException) ex;</span><br><span class="line">            code &#x3D; baseException.getErrorcCodes().getCode();</span><br><span class="line">            msg &#x3D; baseException.getMessage();</span><br><span class="line">        &#125;</span><br><span class="line">        return ResultUtil.error(code, msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="应用示例"><a href="#应用示例" class="headerlink" title="应用示例"></a>应用示例</h2><p>调用请求成功方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public BaseResult&lt;HxTycCompanyInfo&gt; save(String code) &#123;</span><br><span class="line">        return ResultUtil.success(companyInfoApiService.save(code));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>调用异常方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">throw new BaseException(CodeEnum.UNSPECIFIED);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Exception</tag>
        <tag>Restful</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/29/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <tags>
        <tag>hello</tag>
        <tag>test</tag>
      </tags>
  </entry>
</search>
